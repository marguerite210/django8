"""
Django settings for Django8 project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from django.urls.base import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#LOGIN_URL : login_required �븿�닔瑜� �넻�빐 鍮꾨줈洹몄씤 �긽�깭�쓽 �쑀��瑜�
#�빐�떦�븯�뒗 URL二쇱냼濡� �씠�룞�떆�궎湲� �쐞�븳 蹂��닔
#reverse   : �빐�떦 �븿�닔瑜� �샇異쒗뻽�쓣 �븣 利됱떆 urls �뙆�씪�쓣 �깘�깋�빐�꽌 url二쇱냼瑜� 李얠쓬
#reverse_lazy: �빐�떦 �븿�닔瑜� �샇異쒗뻽�쓣 �븣 �쎒�꽌踰꾩쓽 �떎�뻾�씠 以�鍮꾨릺硫� urls�뙆�씪�쓣
#              �깘�깋�빐�꽌 url二쇱냼瑜� 李얠쓬
LOGIN_URL = reverse_lazy('customlogin:signin')
#濡쒓렇�씤�쓣 �셿猷� �븳 �뮘 �룎�븘�삱 二쇱냼
LOGIN_REDIRECT_URL = reverse_lazy('index')
#�씤利� 泥섎━�뿉 愿��븳 紐⑤뱢�벑濡�
AUTHENTICATION_BACKENDS = (
    #援ш� �씤利�
    'social_core.backends.open_id.OpenIdAuth',
    'social_core.backends.google.GoogleOpenId',
    'social_core.backends.google.GoogleOAuth2',
    #�냼�뀥濡쒓렇�씤怨� User紐⑤뜽�겢�옒�뒪 留ㅼ묶
    'django.contrib.auth.backends.ModelBackend'
    )


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#bpp^6$xe)7q02z$+s*+p-v(nhy6rp9!ezu73zak6giza4zns%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
#127.0.0.1: 내컴퓨터

ALLOWED_HOSTS = ['localhost','127.0.0.1','.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'vote',
    'customlogin',
    #social-auth-app-django
    'social_django', #�냼�뀥濡쒓렇�씤�뿉 ���븳 �뼱�뵆由ъ��씠�뀡
    'blog'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Django8.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect'
            ],
        },
    },
]
#援ш� 媛쒕컻�옄 �궗�씠�듃�뿉�꽌 諛쒓툒諛쏆� �궎/鍮꾨�踰덊샇 ���옣�븯�뒗 怨듦컙
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY='606778288410-9c3s3u1kcuvv8mh41p85c1nqdsk1mqbi.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET='zOVAv5JDMy5VnAXu424fwbKL'




WSGI_APPLICATION = 'Django8.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'ko'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
#django �봽濡쒖젥�듃 �궡�뿉�꽌 �뙆�씪�쓣 爰쇰궪 �븣 �궗�슜�븯�뒗 URL寃쎈줈
MEDIA_URL = '/files/'
#�떎�젣 �뙆�씪�씠 ���옣�릺�뒗 寃쎈줈
#os.path.join(寃쎈줈,寃쎈줈) : �몢 �뤃�뜑寃쎈줈瑜� 遺숈씤 寃쎈줈 媛믪쓣 諛섑솚
#project 寃쎈줈: d:\django
#'files'寃쎈줈瑜� 異붽�
#=> d:\django\files\
MEDIA_ROOT=os.path.join(BASE_DIR, 'files')

#http://127.0.0.1:8000/files/1.jpg
#-> �봽濡쒖젥�듃寃쎈줈/files/1.jpg








